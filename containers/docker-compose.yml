services:
  traefik:
    container_name: traefik
    image: traefik:v2.11
    restart: unless-stopped
    privileged: true
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    command:
      - --log.level=DEBUG
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.resolver.acme.tlschallenge=true
      - --certificatesresolvers.resolver.acme.email=${ADMIN_EMAIL}
      - --certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json
    ports:
      - "443:443"
      - "8080:8080" # traefik dashboard
    volumes:
      - ${APP_DATA}/webservices/letsencrypt:/letsencrypt
      #- /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/run/podman/podman.sock:/var/run/docker.sock:ro

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    #privileged: true
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /var/run/podman/podman.sock:/var/run/docker.sock:ro
      - ${APP_DATA}/webservices/portainer:/data
    #    ports:
    #      - "9000:9000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${ROOT_DOMAIN}`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.tls.certresolver=resolver
      - traefik.http.services.portainer.loadbalancer.server.port=9000

  ollama:
    container_name: ollama
    image: ollama/ollama
    restart: unless-stopped
    hostname: ollama
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - OLLAMA_KEEP_ALIVE=24h
    volumes:
      - ${APP_DATA}/webservices/ollama:/root/.ollama
    #    ports:
    #      - "11434:11434"
    # podman syntax for nvidia support
    devices:
      - nvidia.com/gpu=all
    # nixos docker rootless syntax for nvidia support
    #    deploy:
    #      resources:
    #        reservations:
    #          devices:
    #            - driver: cdi
    #              device_ids:
    #                - nvidia.com/gpu=all
    #labels:
      #- traefik.enable=true
      #- traefik.http.routers.ollama.rule=Host(`${SECRET_OLLAMA_SUBDOMAIN}.${ROOT_DOMAIN}`)
      #- traefik.http.routers.ollama.tls=true
      #- traefik.http.routers.ollama.entrypoints=websecure
      #- traefik.http.routers.ollama.tls.certresolver=resolver
      #- traefik.http.services.ollama.loadbalancer.server.port=11434
      #- traefik.http.routers.ollama.middlewares=auth
      #- traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH_USER}:${BASIC_AUTH_PASS}

  open-webui:
    container_name: open-webui
    image: ghcr.io/open-webui/open-webui:main
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - "OLLAMA_BASE_URL=http://ollama:11434"
    volumes:
      - ${APP_DATA}/webservices/open-webui:/app/backend/data
    depends_on:
      - ollama
    #    ports:
    #      - 3000:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.openwebui.rule=Host(`llm.${ROOT_DOMAIN}`)
      - traefik.http.routers.openwebui.tls=true
      - traefik.http.routers.openwebui.entrypoints=websecure
      - traefik.http.routers.openwebui.tls.certresolver=resolver
      - traefik.http.services.openwebui.loadbalancer.server.port=8080

  # game servers
  factorio:
    image: factoriotools/factorio:stable
    container_name: factorio
    restart: unless-stopped
    ports:
      - "34197:34197/udp"
      - "27015:27015/tcp"
    volumes:
      - ${APP_DATA}/gameservers/factorio:/factorio
    environment:
      - PUID=1000
      - PGID=1000
      - UPDATE_MODS_ON_START=true
#      - USERNAME=FactorioUsername
#      - TOKEN=FactorioToken
#      - PORT=34198
#      - PRESET=deathworld
#      - ADDR=::1
